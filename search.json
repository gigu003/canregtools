[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 canregtools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Qiong Chen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chen Q (2025). canregtools: Tools Analyzing Population-Based Cancer Registry Data. R package version 0.2.8, https://gigu003.github.io/canregtools/.","code":"@Manual{,   title = {canregtools: Tools for Analyzing Population-Based Cancer Registry Data},   author = {Qiong Chen},   year = {2025},   note = {R package version 0.2.8},   url = {https://gigu003.github.io/canregtools/}, }"},{"path":"/index.html","id":"canregtools-","dir":"","previous_headings":"","what":"canregtools","title":"Tools for Analyzing Population-Based Cancer Registry Data","text":"Canregtools R package designed streamline data analysis, visualization, reporting Population-Based Cancer Registration (PBCR). includes five sets R functions cover data reading, processing, statistical calculations, visualization, reporting. data processing functions carried tasks categorizing age different groups, classifying ICD-10 (ICD-O-3) codes categories using various methods, tidying variables clean format. statistical calculating functions calculate statistics age-standardized rates (ASR), truncated rates, cumulative rates, cumulative risk, lifetime risk, life tables, quality indicators. Additionally, can generate summary sheet containing statistics.","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Tools for Analyzing Population-Based Cancer Registry Data","text":"Currently, package available CRAN, can install development version canregtools GitHub. installation method follows:","code":"## Install the remotes package install.packages(\"remotes\")  library(remotes) install_github(\"gigu003/canregtools\")"},{"path":"/reference/add_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add variable labels for data set. — add_labels","title":"Add variable labels for data set. — add_labels","text":"function labels variables sex cancer dataset based specified language label type.","code":""},{"path":"/reference/add_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add variable labels for data set. — add_labels","text":"","code":"add_labels(x, label_type = \"full\", lang = \"zh\")"},{"path":"/reference/add_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add variable labels for data set. — add_labels","text":"x data frame tibble labeled. label_type Type label cancer variable. Options : \"full\" - Full descriptive labels. \"abbr\" - Shortened labels. \"icd10\" - ICD-10 codes . default \"full\". lang Language labels. Options : \"zh\" - Chinese. \"en\" - English. default \"zh\".","code":""},{"path":"/reference/add_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add variable labels for data set. — add_labels","text":"data frame tibble labeled variables.","code":""},{"path":"/reference/ageadjust.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the age standardized rate using the direct method. — ageadjust","title":"Calculate the age standardized rate using the direct method. — ageadjust","text":"Calculate age standardized rate using direct method.","code":""},{"path":"/reference/ageadjust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the age standardized rate using the direct method. — ageadjust","text":"","code":"ageadjust(   count,   pop,   rate = NULL,   stdpop = NULL,   method = \"gamma\",   conf_level = 0.95,   mp = 1e+05 )"},{"path":"/reference/ageadjust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the age standardized rate using the direct method. — ageadjust","text":"count number cases specific disease condition. pop total population group region disease cases (count) observed. rate Disease rate, number cases (count) per unit population (pop). stdpop Standardized population age standardization. method Method used calculating age-standardized rate, options 'gamma', 'normal', 'lognormal', default 'gamma'. conf_level Confidence level calculating confidence intervals, value 0 1, default 0.95. mp multiplier used scale calculated rates. Default 100000.","code":""},{"path":"/reference/ageadjust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the age standardized rate using the direct method. — ageadjust","text":"Age standardized rate confidence interval.","code":""},{"path":"/reference/ageadjust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the age standardized rate using the direct method. — ageadjust","text":"","code":"cases <- c(50, 60, 45, 70) pop <- c(1000, 1200, 1100, 900) spop <- c(800, 1000, 1100, 900) ageadjust(cases, pop, stdpop = spop, mp = 100000) #> $cases #> [1] 225 #>  #> $cr #> [1] 5357.143 #>  #> $cr_var #> [1] 1.27551e-05 #>  #> $cr_lci #> [1] 4679.972 #>  #> $cr_uci #> [1] 6104.765 #>  #> $asr #> [1] 5394.737 #>  #> $asr_var #> [1] 1.306556e-05 #>  #> $asr_lci #> [1] 4709.493 #>  #> $asr_uci #> [1] 6154.046 #>"},{"path":"/reference/calc_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the actual age between two dates — calc_age","title":"Calculate the actual age between two dates — calc_age","text":"Calculate actual age two dates","code":""},{"path":"/reference/calc_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the actual age between two dates — calc_age","text":"","code":"calc_age(birth_date, onset_date)"},{"path":"/reference/calc_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the actual age between two dates — calc_age","text":"birth_date Birth date. onset_date Event date.","code":""},{"path":"/reference/calc_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the actual age between two dates — calc_age","text":"Vector ages.","code":""},{"path":"/reference/calc_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the actual age between two dates — calc_age","text":"","code":"sdate <- as.Date(\"1960-01-01\") edate <- as.Date(\"1980-12-31\") bdate <- sample(seq(sdate, edate, by = \"1 day\"), 100, replace = TRUE) event <- sample(seq(as.Date(\"2020-01-01\"),                     as.Date(\"2023-07-08\"),                     by = \"1 day\"),                 100, replace = TRUE) ages <- calc_age(bdate, event) ages #>   [1] 46 45 44 56 61 43 55 42 58 51 54 49 56 48 56 50 60 44 53 51 43 50 41 40 54 #>  [26] 54 48 50 54 43 54 58 41 51 46 47 53 45 50 57 54 42 57 58 39 44 60 45 50 53 #>  [51] 55 57 48 45 51 42 49 58 50 45 44 49 48 52 53 56 48 56 43 59 59 61 51 42 60 #>  [76] 58 43 58 55 43 54 56 46 54 50 55 59 45 45 42 54 46 56 44 52 50 56 44 54 55"},{"path":"/reference/cancer_type.html","id":null,"dir":"Reference","previous_headings":"","what":"cancer_type — cancer_type","title":"cancer_type — cancer_type","text":"cancer_type","code":""},{"path":"/reference/cancer_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cancer_type — cancer_type","text":"cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'.","code":""},{"path":"/reference/canregtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"canregtools: Tools for Analyzing Population-Based Cancer Registry Data — canregtools-package","title":"canregtools: Tools for Analyzing Population-Based Cancer Registry Data — canregtools-package","text":"Tools designed streamline data analysis, visualization, reporting Population-Based Cancer Registration (PBCR).","code":""},{"path":[]},{"path":"/reference/canregtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"canregtools: Tools for Analyzing Population-Based Cancer Registry Data — canregtools-package","text":"Maintainer: Qiong Chen chenq08@126.com (ORCID)","code":""},{"path":"/reference/check_canreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the class of 'canreg' — check_canreg","title":"Check the class of 'canreg' — check_canreg","text":"Check class 'canreg'","code":""},{"path":"/reference/check_canreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the class of 'canreg' — check_canreg","text":"","code":"check_canreg(data, pop_type = \"single\")  # S3 method for class 'canregs' check_canreg(data, pop_type = \"single\")  # S3 method for class 'canreg' check_canreg(data, pop_type = \"single\")"},{"path":"/reference/check_canreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the class of 'canreg' — check_canreg","text":"data Object classs 'canreg' pop_type Population data structure class 'canreg'","code":""},{"path":"/reference/check_canreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the class of 'canreg' — check_canreg","text":"Logical value","code":""},{"path":"/reference/classify_childhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","title":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","text":"Classify pediatric tumors according ICCC3 standards.","code":""},{"path":"/reference/classify_childhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","text":"","code":"classify_childhood(topo, morp, beha, type = \"sub\", version = \"v2005\")"},{"path":"/reference/classify_childhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","text":"topo Topography codes ICDO3, format 'C15.6' C156'. morp Morphology codes ICDO3, format '8000' 'M8140'. beha Behaviour code ICDO3. type Type Classification output, options 'main' 'sub', default 'main'. version ICCC3 standards, \"v2005\" \"v2017\".","code":""},{"path":"/reference/classify_childhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","text":"Recode ICCC3 classification.","code":""},{"path":"/reference/classify_childhood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify pediatric tumors according to the ICCC3 standards. — classify_childhood","text":"function classify 'topo' 'morp' parts ICDO3 codes ICCC3 (International Classification Childhood Cancer, Third edition).","code":""},{"path":"/reference/classify_icd10.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","title":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","text":"Classify ICD10 codes Cancer Categories according specified category type language.","code":""},{"path":"/reference/classify_icd10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","text":"","code":"classify_icd10(x, cancer_type = \"big\", as_factor = FALSE)"},{"path":"/reference/classify_icd10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","text":"x ICD10 codes cancer part (C00-C98 D00-D48) collected Population-Based Cancer Registration (PBCR). cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'. as_factor logical indicate output value factor.","code":""},{"path":"/reference/classify_icd10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","text":"Cancer code","code":""},{"path":"/reference/classify_icd10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify ICD10 Codes to Cancer Categories. — classify_icd10","text":"","code":"icd10 <- c(\"C15.2\", \"C33.4\", \"C80.9\", \"C26.2\", \"C16.3\") classify_icd10(icd10, cancer_type = \"big\") #> [1] 103 110 126 126 104"},{"path":"/reference/clean_canreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean canreg data. — clean_canreg","title":"Clean canreg data. — clean_canreg","text":"Clean canreg data.","code":""},{"path":"/reference/clean_canreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean canreg data. — clean_canreg","text":"","code":"clean_canreg(   x,   cutage_method = \"distance\",   smooth_age = \"natural\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )  # S3 method for class 'FBcases' clean_canreg(   x,   cutage_method = \"distance\",   smooth_age = \"natural\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )  # S3 method for class 'SWcases' clean_canreg(   x,   cutage_method = \"distance\",   smooth_age = \"natural\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )  # S3 method for class 'population' clean_canreg(   x,   cutage_method = \"distance\",   smooth_age = \"natural\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )"},{"path":"/reference/clean_canreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean canreg data. — clean_canreg","text":"x Data class 'FBcases', 'SWcases' 'population'. cutage_method Method grouping ages. Options 'distance', 'interval', 'quarter'. Default 'distance'. smooth_age Method expanding age. Options 'linear','natural', 'periodic'. Default 'natural'. breaks Cut points age groups 'cutage_method' 'interval'. Default 'c(0, 15, 40, 65)'. length Length age group 'cutage_method' 'distance'. Default 5. maxage Start age last age groups. Default 85. sep_zero Logical value TRUE FALSE, 0-year age group treated separate group. Default TRUE. labels Labels age groups. label_tail Tail labels. cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'.","code":""},{"path":"/reference/clean_canreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean canreg data. — clean_canreg","text":"Class 'canreg'.","code":""},{"path":"/reference/cmerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge list — cmerge","title":"Merge list — cmerge","text":"Merge list","code":""},{"path":"/reference/cmerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge list — cmerge","text":"","code":"cmerge(data, nested = NULL)"},{"path":"/reference/cmerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge list — cmerge","text":"data list need merged. nested Nested list.","code":""},{"path":"/reference/cmerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge list — cmerge","text":"object","code":""},{"path":"/reference/count_canreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Count canreg data. — count_canreg","title":"Count canreg data. — count_canreg","text":"Count canreg data.","code":""},{"path":"/reference/count_canreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count canreg data. — count_canreg","text":"","code":"count_canreg(   x,   cutage_method = \"distance\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )  # S3 method for class 'canregs' count_canreg(x, ...)  # S3 method for class 'canreg' count_canreg(   x,   cutage_method = \"distance\",   breaks = c(0, 15, 40, 65),   length = 5,   maxage = 85,   sep_zero = TRUE,   labels = NULL,   label_tail = NULL,   cancer_type = \"big\" )"},{"path":"/reference/count_canreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count canreg data. — count_canreg","text":"x Object data class 'canreg' 'canregs'. cutage_method Methods Specifying Age Groups. Options \"interval\", \"distance\", \"quantile\". Default \"distance\". breaks Specify break points classify age groups cutage_method 'interval'. Default 'c(0, 15, 40, 65)'. length Specify length age group cutage_method 'distance'. Default 5. maxage Specify max age age group cutage_method 'distance'. Default 85. sep_zero Logical value, TRUE FALSE, specifying whether treat age 0 separate group. Default TRUE. labels Labels age groups. Default NULL. label_tail Tail label added labels. Default NULL. cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'. ... Parameters.","code":""},{"path":"/reference/count_canreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count canreg data. — count_canreg","text":"data class fbswicd.","code":""},{"path":"/reference/count_canreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count canreg data. — count_canreg","text":"","code":"library(canregtools) file <- system.file(\"extdata\", \"411721.xls\", package = \"canregtools\") data <- read_canreg(file) fbsw <- count_canreg(data, cutage_method = \"interval\") fbsw #> $areacode #> [1] \"411721\" #>  #> $fbswicd #>       year   sex  agegrp cancer   fbs   sws    mv    ub   sub m8000   dco #>      <int> <int>  <fctr>  <int> <int> <int> <int> <int> <int> <int> <int> #>   1:  2016     1 0-14 岁     60    10     6     8     0     6     2     0 #>   2:  2016     1 0-14 岁     61    10     6     8     0     6     2     0 #>   3:  2016     1 0-14 岁    101     0     0     0     0     0     0     0 #>   4:  2016     1 0-14 岁    102     0     0     0     0     0     0     0 #>   5:  2016     1 0-14 岁    103     0     0     0     0     0     0     0 #>  ---                                                                      #> 220:  2016     2  65+ 岁    122    17     9     1     0     6     9     2 #> 221:  2016     2  65+ 岁    123     3     0     3     0     0     0     0 #> 222:  2016     2  65+ 岁    124    11    12     6     0     8     0     0 #> 223:  2016     2  65+ 岁    125     5     6     5     0     3     0     0 #> 224:  2016     2  65+ 岁    126    14    11    13     1     3     1     0 #>  #> $sitemorp #>      year   sex cancer               site               morp #>     <int> <int>  <int>             <list>             <list> #>  1:  2016     2    101  <data.frame[3x2]>  <data.frame[3x2]> #>  2:  2016     1    101  <data.frame[8x2]>  <data.frame[4x2]> #>  3:  2016     2    124  <data.frame[8x2]>  <data.frame[9x2]> #>  4:  2016     2    102  <data.frame[1x2]>  <data.frame[2x2]> #>  5:  2016     1    102  <data.frame[1x2]>  <data.frame[1x2]> #>  6:  2016     1    103  <data.frame[7x2]>  <data.frame[8x2]> #>  7:  2016     2    103  <data.frame[4x2]>  <data.frame[3x2]> #>  8:  2016     1    104  <data.frame[5x2]>  <data.frame[6x2]> #>  9:  2016     2    104  <data.frame[6x2]>  <data.frame[7x2]> #> 10:  2016     1    124  <data.frame[7x2]>  <data.frame[8x2]> #> 11:  2016     1    126 <data.frame[23x2]> <data.frame[11x2]> #> 12:  2016     2    126 <data.frame[20x2]> <data.frame[20x2]> #> 13:  2016     2    105 <data.frame[11x2]>  <data.frame[6x2]> #> 14:  2016     1    105  <data.frame[9x2]>  <data.frame[6x2]> #> 15:  2016     1    106  <data.frame[4x2]>  <data.frame[6x2]> #> 16:  2016     2    106  <data.frame[4x2]>  <data.frame[4x2]> #> 17:  2016     2    107  <data.frame[3x2]>  <data.frame[4x2]> #> 18:  2016     1    107  <data.frame[3x2]>  <data.frame[5x2]> #> 19:  2016     1    108  <data.frame[3x2]>  <data.frame[5x2]> #> 20:  2016     2    108  <data.frame[2x2]>  <data.frame[4x2]> #> 21:  2016     1    109  <data.frame[2x2]>  <data.frame[1x2]> #> 22:  2016     2    109  <data.frame[1x2]>  <data.frame[1x2]> #> 23:  2016     1    110  <data.frame[6x2]>  <data.frame[5x2]> #> 24:  2016     2    110  <data.frame[5x2]>  <data.frame[6x2]> #> 25:  2016     1    111  <data.frame[2x2]>  <data.frame[3x2]> #> 26:  2016     2    111  <data.frame[1x2]>  <data.frame[1x2]> #> 27:  2016     1    112  <data.frame[3x2]>  <data.frame[3x2]> #> 28:  2016     2    112  <data.frame[4x2]>  <data.frame[2x2]> #> 29:  2016     2    125 <data.frame[10x2]> <data.frame[11x2]> #> 30:  2016     1    125  <data.frame[9x2]> <data.frame[10x2]> #> 31:  2016     1    113  <data.frame[2x2]>  <data.frame[1x2]> #> 32:  2016     2    113  <data.frame[2x2]>  <data.frame[1x2]> #> 33:  2016     2    114  <data.frame[5x2]> <data.frame[14x2]> #> 34:  2016     1    114  <data.frame[1x2]>  <data.frame[1x2]> #> 35:  2016     2    115  <data.frame[3x2]>  <data.frame[5x2]> #> 36:  2016     2    116  <data.frame[3x2]>  <data.frame[5x2]> #> 37:  2016     2    117  <data.frame[1x2]>  <data.frame[9x2]> #> 38:  2016     1    118  <data.frame[1x2]>  <data.frame[2x2]> #> 39:  2016     1    119  <data.frame[2x2]>  <data.frame[2x2]> #> 40:  2016     1    120  <data.frame[4x2]>  <data.frame[8x2]> #> 41:  2016     2    120  <data.frame[3x2]>  <data.frame[4x2]> #> 42:  2016     2    121  <data.frame[1x2]>  <data.frame[4x2]> #> 43:  2016     1    121  <data.frame[1x2]>  <data.frame[3x2]> #> 44:  2016     1    122 <data.frame[11x2]>  <data.frame[5x2]> #> 45:  2016     2    122  <data.frame[8x2]>  <data.frame[5x2]> #> 46:  2016     1    123  <data.frame[1x2]>  <data.frame[5x2]> #> 47:  2016     2    123  <data.frame[1x2]>  <data.frame[5x2]> #>      year   sex cancer               site               morp #>  #> $pop #>     year   sex   agegrp    rks #>    <int> <int>   <fctr>  <int> #> 1:  2016     1  0-14 岁  80846 #> 2:  2016     1 15-39 岁 180929 #> 3:  2016     1 40-64 岁 155155 #> 4:  2016     1   65+ 岁  38723 #> 5:  2016     2  0-14 岁  70475 #> 6:  2016     2 15-39 岁 165617 #> 7:  2016     2 40-64 岁 144124 #> 8:  2016     2   65+ 岁  46148 #>  #> attr(,\"class\") #> [1] \"fbswicd\" \"list\""},{"path":"/reference/cr_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge elements from objects of class canregs, fbswicds, or asrs — cr_merge","title":"Merge elements from objects of class canregs, fbswicds, or asrs — cr_merge","text":"Merge elements object class 'canregs', 'fbswicds', 'asrs' based provided index conditions. class returned object input object.","code":""},{"path":"/reference/cr_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge elements from objects of class canregs, fbswicds, or asrs — cr_merge","text":"","code":"cr_merge(data)  # S3 method for class 'canregs' cr_merge(data)  # S3 method for class 'fbswicds' cr_merge(data)  # S3 method for class 'asrs' cr_merge(data)  # S3 method for class 'qualities' cr_merge(data)"},{"path":"/reference/cr_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge elements from objects of class canregs, fbswicds, or asrs — cr_merge","text":"data object class 'canregs', 'asrs', 'fbswicds'.","code":""},{"path":"/reference/cr_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge elements from objects of class canregs, fbswicds, or asrs — cr_merge","text":"object merged elements.","code":""},{"path":"/reference/cr_reframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Reframe data of class canregs or fbswicds — cr_reframe","title":"Reframe data of class canregs or fbswicds — cr_reframe","text":"Reframe data class canregs fbswicds","code":""},{"path":"/reference/cr_reframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reframe data of class canregs or fbswicds — cr_reframe","text":"","code":"cr_reframe(x, strat = \"registry\")  # S3 method for class 'canregs' cr_reframe(x, strat = \"registry\")  # S3 method for class 'fbswicds' cr_reframe(x, strat = \"registry\")"},{"path":"/reference/cr_reframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reframe data of class canregs or fbswicds — cr_reframe","text":"x Object class canregs fbswicds. strat Stratification variables used reframe 'canregs' 'fbswicds'.","code":""},{"path":"/reference/cr_reframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reframe data of class canregs or fbswicds — cr_reframe","text":"Reframed canregs fbswicds.","code":""},{"path":"/reference/cr_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select elements from objects with class ","title":"Select elements from objects with class ","text":"function allows select specific elements objects class 'canregs', 'fbswicds', 'asrs' based provided indices, logical conditions, expressions. selected elements returned preserving class input object.","code":""},{"path":"/reference/cr_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select elements from objects with class ","text":"","code":"cr_select(data, ..., index = names(data))  # S3 method for class 'canregs' cr_select(data, ..., index = names(data))  # S3 method for class 'asrs' cr_select(data, ..., index = names(data))  # S3 method for class 'fbswicds' cr_select(data, ..., index = names(data))  # S3 method for class 'summaries' cr_select(data, ..., index = names(data))"},{"path":"/reference/cr_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select elements from objects with class ","text":"data object class 'canregs', 'fbswicds', 'asrs' elements selected. ... Optional conditions expressions used filter elements within list data frame. Conditions evaluated element input object. index vector indices specifying elements select. can character vector (matching element names), numeric vector (specifying positions), logical vector (indicating inclusion).","code":""},{"path":"/reference/cr_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select elements from objects with class ","text":"object class input object, containing selected elements meet specified indices conditions.","code":""},{"path":"/reference/create_age_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create age specific rate — create_age_rate","title":"Create age specific rate — create_age_rate","text":"Creates data frame age-specific rates based class data (fbswicd canreg).","code":""},{"path":"/reference/create_age_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create age specific rate — create_age_rate","text":"","code":"create_age_rate(   x,   ...,   event = fbs,   cancer_type = \"big\",   format = \"long\",   mp = 1e+05,   decimal = 6,   show_pop = FALSE )  # S3 method for class 'canreg' create_age_rate(x, ..., cancer_type = \"big\")  # S3 method for class 'fbswicds' create_age_rate(   x,   ...,   event = fbs,   format = \"long\",   mp = 1e+05,   decimal = 6,   show_pop = FALSE )  # S3 method for class 'fbswicd' create_age_rate(   x,   ...,   event = fbs,   format = \"long\",   mp = 1e+05,   decimal = 6,   show_pop = FALSE )"},{"path":"/reference/create_age_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create age specific rate — create_age_rate","text":"x input data, object class 'fbswicd', 'fbswicds', 'canreg', 'canregs'. ... One variables used stratification. example, can stratify sex, year, cancer, just year. sex passed parameter, output result combined gender. event variable used specify type calculation, options fbs sws, fbs cancer incidence, sws cancer mortality. cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'. format Format output data frame, either \"long\" \"wide\". mp constant multiply rates (e.g. mp=1000 rates per 1000). decimal parameter specifies number decimal places round results. default 2, means rates rounded two decimal places. show_pop Logical value whether output population .","code":""},{"path":"/reference/create_age_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create age specific rate — create_age_rate","text":"data frame age-specific rates.","code":""},{"path":"/reference/create_asr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Age-Standardized Rate (ASR) — create_asr","title":"Calculate Age-Standardized Rate (ASR) — create_asr","text":"function calculates age-standardized rates (ASRs) using PBCR data. supports stratification multiple variables, allows specification different standard population structures, provides flexibility inclusion variance, confidence intervals, population data.","code":""},{"path":"/reference/create_asr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Age-Standardized Rate (ASR) — create_asr","text":"","code":"create_asr(   x,   ...,   event = fbs,   std = c(\"cn2000\", \"wld85\"),   cancer_type = \"big\",   mp = 1e+05,   decimal = 2,   show_var = FALSE,   show_ci = FALSE )  # S3 method for class 'canregs' create_asr(x, ..., cancer_type = \"big\")  # S3 method for class 'canreg' create_asr(x, ..., cancer_type = \"big\")  # S3 method for class 'fbswicds' create_asr(   x,   ...,   event = fbs,   std = c(\"cn2000\", \"wld85\"),   mp = 1e+05,   decimal = 6,   show_pop = FALSE,   show_var = FALSE,   show_ci = FALSE )  # S3 method for class 'fbswicd' create_asr(   x,   ...,   event = fbs,   std = c(\"cn2000\", \"wld85\"),   mp = 1e+05,   decimal = 6,   show_pop = FALSE,   show_var = FALSE,   show_ci = FALSE )"},{"path":"/reference/create_asr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Age-Standardized Rate (ASR) — create_asr","text":"x input data, object class 'fbswicd', 'fbswicds', 'canreg', 'canregs'. ... One variables used stratification. example, can stratify sex, year, cancer, just year. sex passed parameter, output result combined gender. event variable used specify type calculation, options fbs sws, fbs cancer incidence, sws cancer mortality. std Specify standard population structure 'std_pop' data frame used calculating standardized rates. calculating standardized rates multiple standard populations, specify std = c(segi, china). cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'. mp constant multiply rates (e.g. mp=1000 rates per 1000). decimal parameter specifies number decimal places round results. default 2, means rates rounded two decimal places. show_var Logical value whether output variance . show_ci Logical value whether output confidence(lower upper bound) . show_pop Logical value whether output population .","code":""},{"path":"/reference/create_asr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Age-Standardized Rate (ASR) — create_asr","text":"data frame tibble contains age standard rates CIs.","code":""},{"path":[]},{"path":"/reference/create_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Create quality indicators — create_quality","title":"Create quality indicators — create_quality","text":"function generates data frame list data frames containing quality indicators population-based cancer registries (PBCRs). indicators include various metrics : fbs: Number incident cases. fbl: Incidence rate. sws: Number death cases. swl: Mortality rate. mv: Percentage cases microscopic verification. mi: Mortality--incidence ratio. relevant quality metrics cancer data evaluation.","code":""},{"path":"/reference/create_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create quality indicators — create_quality","text":"","code":"create_quality(x, ..., decimal = 2)  # S3 method for class 'canreg' create_quality(x, ..., cancer_type = \"big\")  # S3 method for class 'canregs' create_quality(x, ..., cancer_type = \"big\")  # S3 method for class 'fbswicds' create_quality(x, ..., decimal = 2)  # S3 method for class 'fbswicd' create_quality(x, ..., decimal = 2)"},{"path":"/reference/create_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create quality indicators — create_quality","text":"x input data, object class 'fbswicd', 'fbswicds', 'canreg', 'canregs'. ... One variables used stratification. example, can stratify sex, year, cancer, just year. sex passed parameter, output result combined gender. decimal number decimal places include resulting quality indicator values. Defaults 2. cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'.","code":""},{"path":"/reference/create_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create quality indicators — create_quality","text":"function returns data frame (applied single registry object, 'canreg' 'fbswicd') list data frames (applied grouped registry object, 'canregs' 'fbswicds') class either 'quality' 'qualities'. output data frame contains computed quality indicators registry subgroup.","code":""},{"path":"/reference/create_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create quality indicators — create_quality","text":"","code":"data <- load_canreg() qua <- create_quality(data, year, sex, cancer, cancer_type = \"big\") head(qua) #> # A tibble: 6 × 14 #>    year   sex cancer    rks   fbs    fbl   sws    swl    mi    mv   dco    ub #>   <int> <int>  <int>  <int> <int>  <dbl> <int>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  2016     1     60 455653  1183 260.     920 202.    0.78  65.8  2.62  0.68 #> 2  2016     1     61 455653  1175 258.     917 201.    0.78  65.5  2.64  0.68 #> 3  2016     1    101 455653    13   2.85    10   2.19  0.77 100    0     0    #> 4  2016     1    102 455653     7   1.54     7   1.54  1    100    0     0    #> 5  2016     1    103 455653   157  34.5    127  27.9   0.81  86.0  2.55  0    #> 6  2016     1    104 455653   135  29.6    107  23.5   0.79  91.1  2.22  0    #> # ℹ 2 more variables: sub <dbl>, m8000 <dbl> fbsw <- count_canreg(data, cancer_type = \"system\") qua2 <- create_quality(fbsw, year, sex, cancer) head(qua2) #> # A tibble: 6 × 14 #>    year   sex cancer    rks   fbs    fbl   sws    swl    mi    mv   dco    ub #>   <int> <int>  <int>  <int> <int>  <dbl> <int>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  2016     1     60 455653  1155 253.     897 197.    0.78  66.4  2.68  0.69 #> 2  2016     1     61 455653  1147 252.     894 196.    0.78  66.2  2.7   0.7  #> 3  2016     1    201 455653    20   4.39    17   3.73  0.85 100    0     0    #> 4  2016     1    202 455653   591 130.     475 104.    0.8   67.7  2.88  0.17 #> 5  2016     1    203 455653   336  73.7    284  62.3   0.85  54.8  2.38  0    #> 6  2016     1    204 455653    21   4.61    12   2.63  0.57  81.0  4.76  0    #> # ℹ 2 more variables: sub <dbl>, m8000 <dbl>"},{"path":"/reference/create_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — create_ratio","title":"Title — create_ratio","text":"Title","code":""},{"path":"/reference/create_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — create_ratio","text":"","code":"create_ratio(x, ...)  # S3 method for class 'fbswicd' create_ratio(x, ...)"},{"path":"/reference/create_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — create_ratio","text":"x Data class 'fbswicd'. ... Stratification variables.","code":""},{"path":"/reference/create_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — create_ratio","text":"data frame.","code":""},{"path":"/reference/create_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create report from report templates — create_report","title":"Create report from report templates — create_report","text":"Create report report templates","code":""},{"path":"/reference/create_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create report from report templates — create_report","text":"","code":"create_report(   data,   template = \"annual\",   title = \"Cancer Registry Report\",   output_format = \"html_document\",   output_dir = NULL )  # S3 method for class 'canregs' create_report(   data,   template = \"annual\",   title = \"Cancer Registry Report\",   output_format = \"html_document\",   output_dir = NULL )  # S3 method for class 'canreg' create_report(   data,   template = \"annual\",   title = \"Cancer Registry Report\",   output_format = \"html_document\",   output_dir = NULL )"},{"path":"/reference/create_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create report from report templates — create_report","text":"data Object class 'canreg' 'fbswicd'. template Name template used render report, options \"annual\", \"quality\", \"CI5\", default \"annual\". title Title report rendered, default \"Cancer Registry Report\". output_format File type render result, options \"html_document\", \"word_document\" \"pdf_document\", default \"html_document\". output_dir Directory rendered report.","code":""},{"path":"/reference/create_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create sheet of cancer statistics — create_sheet","title":"Create sheet of cancer statistics — create_sheet","text":"Create sheet cancer statistics","code":""},{"path":"/reference/create_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create sheet of cancer statistics — create_sheet","text":"","code":"create_sheet(x, sheet_type = \"incidence\", cancer_type = \"big\")  # S3 method for class 'canreg' create_sheet(x, sheet_type = \"incidence\", cancer_type = \"big\")  # S3 method for class 'fbswicds' create_sheet(x, sheet_type = \"incidence\", cancer_type = \"big\")  # S3 method for class 'fbswicd' create_sheet(x, sheet_type = \"incidence\", cancer_type = \"big\")"},{"path":"/reference/create_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create sheet of cancer statistics — create_sheet","text":"x input data, object class 'fbswicd', 'fbswicds', 'canreg', 'canregs'. sheet_type Character value indicate type sheet, options 'incidence', 'mortality', 'quality', 'population'. cancer_type character string specifying classification method used categorize ICD-10 codes. determines ICD-10 codes classified. Options include \"big\" (classify ICD-10 codes 26 cancer categories), \"small\" (classify ICD-10 codes 59 cancer categories, specific categories), \"system\" (classify ICD-10 codes organ system), \"gco\" (classify ICD-10 code cancer categories classification published Global Cancer Observatory). parameter available input data vector ICD-10 codes, object class 'canreg' 'canregs'.","code":""},{"path":"/reference/create_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create sheet of cancer statistics — create_sheet","text":"data frame tibble contains age standard rates CIs.","code":""},{"path":"/reference/cumrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the cumulative rate. — cumrate","title":"Calculate the cumulative rate. — cumrate","text":"used calculate cumulative rate defined age limit.","code":""},{"path":"/reference/cumrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the cumulative rate. — cumrate","text":"","code":"cumrate(   count,   pop,   rate = NULL,   eage = 70,   agewidth = 5,   sep_zero = TRUE,   mp = 1,   decimal = 6 )"},{"path":"/reference/cumrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the cumulative rate. — cumrate","text":"count Number cases number. pop Number population risk. rate Age specific incidence mortality rate. eage defined age limit calculated cumulative rate. agewidth age band width age specific rate. sep_zero Logical value, 0 age group separate. mp multiplier used scale calculated rates. Default 1. decimal Decimals calculated rates.","code":""},{"path":"/reference/cumrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the cumulative rate. — cumrate","text":"Cumulative rate.","code":""},{"path":"/reference/cumrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the cumulative rate. — cumrate","text":"","code":"px <- c(20005, 86920, 102502, 151494, 182932, 203107, 240289, 247076, 199665,         163820, 145382, 86789, 69368, 51207, 39112, 20509, 12301, 6586, 1909) dx <- c(156, 58, 47, 49, 48, 68, 120, 162, 160, 294, 417, 522, 546, 628,         891, 831, 926, 731, 269) mx <- dx / px cumrate(mx, eage = 70) #> Cumulative Rate(1/1)  #>             0.497705"},{"path":"/reference/cumrisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the cumulative risk. — cumrisk","title":"Calculate the cumulative risk. — cumrisk","text":"used calculate cumulative risk based cumulative rate.","code":""},{"path":"/reference/cumrisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the cumulative risk. — cumrisk","text":"","code":"cumrisk(cumrate, mp = 100, decimal = 2)"},{"path":"/reference/cumrisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the cumulative risk. — cumrisk","text":"cumrate Cumulative rate. mp multiplier used scale calculated rates. Default 100. decimal Decimals calculated rates.","code":""},{"path":"/reference/cumrisk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the cumulative risk. — cumrisk","text":"Cumulative risk.","code":""},{"path":"/reference/cumrisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the cumulative risk. — cumrisk","text":"","code":"px <- c(20005, 86920, 102502, 151494, 182932, 203107, 240289, 247076, 199665,         163820, 145382, 86789, 69368, 51207, 39112, 20509, 12301, 6586, 1909) dx <- c(156, 58, 47, 49, 48, 68, 120, 162, 160, 294, 417, 522, 546, 628,         891, 831, 926, 731, 269) mx <- dx / px cumrate(mx, eage = 70) #> Cumulative Rate(1/1)  #>             0.497705  cumrisk(cumrate(mx, eage = 70)) #> Cumulative Risk (1/100)  #>                   39.21"},{"path":"/reference/cutage.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut age into groups. — cutage","title":"Cut age into groups. — cutage","text":"Cut age groups.","code":""},{"path":"/reference/cutage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut age into groups. — cutage","text":"","code":"cutage(   x,   method = \"distance\",   length = 5,   maxage = 85,   sep_zero = TRUE,   breaks = c(seq(0, 85, 5)),   labels = NULL,   lang = \"cn\",   label_tail = NULL,   right = FALSE )"},{"path":"/reference/cutage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut age into groups. — cutage","text":"x Vector contains ages. method method use age grouping. Options \"interval\", \"distance\", \"quantile\". length length intervals age grouping method set \"distance\". maxage maximum age age grouping. sep_zero logical value indicating whether include separate group age 0. breaks Custom breakpoints \"interval\" method. labels labels levels resulting category. default, labels constructed using \"(,b]\" interval notation. labels = FALSE, simple integer codes returned instead factor. lang Language used output. Options 'cn' 'en'. Default 'cn.'. label_tail string appended end label. right logical value indicating whether intervals right-closed right-open.","code":""},{"path":"/reference/cutage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut age into groups. — cutage","text":"Factor age groups.","code":""},{"path":"/reference/cutage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut age into groups. — cutage","text":"","code":"age <- sample(0:101, 200, replace = TRUE) agegrp <- cutage(age,   method = \"distance\", length = 5,   maxage = 60, sep_zero = TRUE) agegrp #>   [1] 60+ 岁   1-4 岁   60+ 岁   55-59 岁 40-44 岁 30-34 岁 15-19 岁 60+ 岁   #>   [9] 10-14 岁 30-34 岁 60+ 岁   60+ 岁   60+ 岁   55-59 岁 20-24 岁 5-9 岁   #>  [17] 40-44 岁 60+ 岁   55-59 岁 60+ 岁   55-59 岁 60+ 岁   60+ 岁   30-34 岁 #>  [25] 40-44 岁 45-49 岁 35-39 岁 15-19 岁 60+ 岁   60+ 岁   60+ 岁   60+ 岁   #>  [33] 60+ 岁   5-9 岁   50-54 岁 60+ 岁   35-39 岁 60+ 岁   60+ 岁   60+ 岁   #>  [41] 10-14 岁 60+ 岁   15-19 岁 10-14 岁 60+ 岁   30-34 岁 20-24 岁 35-39 岁 #>  [49] 60+ 岁   50-54 岁 60+ 岁   25-29 岁 35-39 岁 15-19 岁 50-54 岁 60+ 岁   #>  [57] 30-34 岁 25-29 岁 20-24 岁 30-34 岁 60+ 岁   60+ 岁   50-54 岁 30-34 岁 #>  [65] 25-29 岁 1-4 岁   15-19 岁 60+ 岁   30-34 岁 45-49 岁 60+ 岁   15-19 岁 #>  [73] 60+ 岁   20-24 岁 60+ 岁   60+ 岁   60+ 岁   10-14 岁 40-44 岁 20-24 岁 #>  [81] 50-54 岁 15-19 岁 1-4 岁   60+ 岁   60+ 岁   60+ 岁   20-24 岁 20-24 岁 #>  [89] 60+ 岁   45-49 岁 10-14 岁 25-29 岁 60+ 岁   20-24 岁 20-24 岁 60+ 岁   #>  [97] 5-9 岁   5-9 岁   5-9 岁   1-4 岁   10-14 岁 5-9 岁   10-14 岁 30-34 岁 #> [105] 15-19 岁 60+ 岁   60+ 岁   60+ 岁   10-14 岁 5-9 岁   60+ 岁   60+ 岁   #> [113] 60+ 岁   60+ 岁   60+ 岁   60+ 岁   25-29 岁 10-14 岁 60+ 岁   60+ 岁   #> [121] 25-29 岁 45-49 岁 25-29 岁 60+ 岁   60+ 岁   60+ 岁   45-49 岁 60+ 岁   #> [129] 60+ 岁   20-24 岁 60+ 岁   10-14 岁 25-29 岁 5-9 岁   60+ 岁   20-24 岁 #> [137] 40-44 岁 40-44 岁 50-54 岁 60+ 岁   60+ 岁   60+ 岁   30-34 岁 60+ 岁   #> [145] 5-9 岁   60+ 岁   55-59 岁 25-29 岁 30-34 岁 40-44 岁 60+ 岁   50-54 岁 #> [153] 50-54 岁 40-44 岁 10-14 岁 25-29 岁 60+ 岁   60+ 岁   60+ 岁   40-44 岁 #> [161] 10-14 岁 5-9 岁   40-44 岁 55-59 岁 60+ 岁   60+ 岁   30-34 岁 15-19 岁 #> [169] 60+ 岁   25-29 岁 60+ 岁   55-59 岁 30-34 岁 15-19 岁 60+ 岁   40-44 岁 #> [177] 10-14 岁 60+ 岁   10-14 岁 60+ 岁   60+ 岁   60+ 岁   55-59 岁 60+ 岁   #> [185] 0 岁     15-19 岁 40-44 岁 30-34 岁 60+ 岁   35-39 岁 10-14 岁 40-44 岁 #> [193] 60+ 岁   30-34 岁 20-24 岁 5-9 岁   40-44 岁 60+ 岁   60+ 岁   35-39 岁 #> 14 Levels: 0 岁 1-4 岁 5-9 岁 10-14 岁 15-19 岁 20-24 岁 25-29 岁 ... 60+ 岁"},{"path":"/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"data — data","title":"data — data","text":"data","code":""},{"path":"/reference/data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data — data","text":"x input data, object class 'fbswicd', 'fbswicds', 'canreg', 'canregs'.","code":""},{"path":"/reference/draw_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw bar chart. — draw_bar","title":"Draw bar chart. — draw_bar","text":"Draw bar chart.","code":""},{"path":"/reference/draw_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw bar chart. — draw_bar","text":"","code":"draw_bar(   values,   cates = NULL,   axis = NULL,   groups = length(values),   bar_side = 1,   bar_way = 1,   gap = ifelse(side_label == 1, 0.6, 0.1),   csize = 0.8,   space = 0.9,   adj = -0.01,   gl = TRUE,   label = c(\"Male\", \"Female\"),   cols = c(\"#006400\", \"#b32134\"),   side_label = 1,   legend = FALSE,   legend_label = NULL,   dens = c(-1, -1),   overlay = FALSE,   ... )"},{"path":"/reference/draw_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw bar chart. — draw_bar","text":"values List values draw. cates Categories groups. axis Axis values. groups Groups bar chart, default length values list. bar_side Orientation bar chart: 1 left 2 right. bar_way Draw bar chart unidirectionally bidirectionally, 1 unidirectionally 2 bidirectionally. gap width center gap. Default 0.1. csize font size write labels sides. Default 1. space Space bars. adj vertical adjustment factor labels age classes. Default -0.01. gl Logical value draw vertical dotted lines. Default TRUE. label Labels two sides. cols colors bars. side_label Draw side label left right. 1 left 2 right. legend Logical value indicates plot legend . legend_label Character legend label. dens density hatching lines (/inch). overlay Logical value, TRUE overlay plot, FALSE . ... options.","code":""},{"path":"/reference/draw_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw bar chart. — draw_bar","text":"bar chart.","code":""},{"path":"/reference/draw_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw group bar chart. — draw_barchart","title":"Draw group bar chart. — draw_barchart","text":"Draw group bar chart.","code":""},{"path":"/reference/draw_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw group bar chart. — draw_barchart","text":"","code":"draw_barchart(   data,   plot_var = cr,   cate_var = cancer,   group_var = year,   side_var = sex,   side_label = NULL,   bar_side = 1,   topn = 10,   grid = c(1, 1),   ... )"},{"path":"/reference/draw_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw group bar chart. — draw_barchart","text":"data data frame tibble. plot_var Var plotted. cate_var Category variable name. group_var Group variable name. side_var Panel variable name. side_label Labels side. bar_side Orientation bar chart: 1 left 2 right. topn Top n 'plot_var' 'group_var' 'side_var'. grid number rows columns plot area. ... options draw_bar.","code":""},{"path":"/reference/draw_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw group bar chart. — draw_barchart","text":"Bar chart","code":""},{"path":"/reference/draw_barchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw group bar chart. — draw_barchart","text":"","code":"data <- load_canreg() rate <- create_asr(data, year, sex, cancer, event = fbs) draw_barchart(rate)"},{"path":"/reference/draw_dumbbell.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot dumbbell chart. — draw_dumbbell","title":"Plot dumbbell chart. — draw_dumbbell","text":"Plot dumbbell chart.","code":""},{"path":"/reference/draw_dumbbell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot dumbbell chart. — draw_dumbbell","text":"","code":"draw_dumbbell(   data,   x = NULL,   y1 = NULL,   y2 = NULL,   topn = 20,   sort = \"insc\",   legend = NULL,   cols = c(\"#006400\", \"#b32134\"),   main = \"\" )"},{"path":"/reference/draw_dumbbell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot dumbbell chart. — draw_dumbbell","text":"data data frame contains data plotted. x category variable data. y1 Variable indicate start point. y2 Variable indicate end point. topn Top n values plotted. sort Sort options. legend Legends. cols Colors start end points. main Main title plot.","code":""},{"path":"/reference/draw_dumbbell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot dumbbell chart. — draw_dumbbell","text":"dumbbell plot.","code":""},{"path":"/reference/draw_linechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw line chart — draw_line","title":"Draw line chart — draw_line","text":"Draw line chart","code":""},{"path":"/reference/draw_linechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw line chart — draw_line","text":"","code":"draw_line(   data,   x_var,   y_var,   group_var,   x_axis = NULL,   y_axis = NULL,   x_label = NULL,   y_label = NULL,   axis_label = c(\"Age (years)\", \"Age specific rate\"),   cols = c(\"darkgreen\", \"darkred\", \"gray\"),   line_type = \"l\",   main = NULL,   add = FALSE,   offset = 0.02,   ... )  draw_linechart(x, facet_var, grid, ...)"},{"path":"/reference/draw_linechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw line chart — draw_line","text":"data input data frame. x_var variable x-axis. y_var variable y-axis. group_var variable used group data multiple lines. x_axis Optional, custom X-axis tick values. provided, function generates . y_axis Optional, custom Y-axis tick values. provided, function generates . x_label Optional, label X-axis ticks. y_label Optional, label Y-axis ticks. axis_label Labels axis title, character vector length 2. cols Optional. colors lines. provided, function uses default colors. line_type 1-character string giving type plot desired. following values possible, details, see plot: \"p\" points, \"l\" lines, \"b\" points lines, \"c\" empty points joined lines, \"o\" overplotted points lines, \"s\" \"S\" stair steps \"h\" histogram-like vertical lines. Finally, \"n\" produce points lines. main Optional. title plot. add Plots added. offset Offset axis. ... Parameters x input data frame. facet_var Facet var grid Grid","code":""},{"path":"/reference/draw_linechart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw line chart — draw_line","text":"Line chart.","code":""},{"path":"/reference/draw_pyramid.fbswicd.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw pyramids from object of fbswicd. — draw_pyramid.fbswicd","title":"Draw pyramids from object of fbswicd. — draw_pyramid.fbswicd","text":"Draw pyramids object fbswicd.","code":""},{"path":"/reference/draw_pyramid.fbswicd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw pyramids from object of fbswicd. — draw_pyramid.fbswicd","text":"","code":"# S3 method for class 'fbswicd' draw_pyramid(x, ..., grid = NULL)"},{"path":"/reference/draw_pyramid.fbswicd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw pyramids from object of fbswicd. — draw_pyramid.fbswicd","text":"x Object class 'fbswicd'. ... Parameters. grid grids.","code":""},{"path":"/reference/draw_pyramid.fbswicd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw pyramids from object of fbswicd. — draw_pyramid.fbswicd","text":"Pyramid plots.","code":""},{"path":"/reference/draw_pyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw population pyramids. — draw_pyramid","title":"Draw population pyramids. — draw_pyramid","text":"Draw population pyramids.","code":""},{"path":"/reference/draw_pyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw population pyramids. — draw_pyramid","text":"","code":"draw_pyramid(   x,   show_value = TRUE,   show_prop = TRUE,   left_axis = NULL,   right_axis = NULL,   axis_fm = \"g\",   axis_bm = \"\",   axis_bi = 3,   cgap = 0.3,   cstep = 1,   csize = 1,   labs = c(\"Males\", \"Ages\", \"Females\"),   gl = TRUE,   cadj = 0,   cols = c(\"#006400\", \"#b32134\"),   dens = c(-1, -1),   main = \"\",   grid = c(2, 3) )"},{"path":"/reference/draw_pyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw population pyramids. — draw_pyramid","text":"x Class 'canreg' 'fbswicd'. show_value Logical value draw population numbers. Default TRUE. show_prop Logical value draw pyramid using proportion. Default TRUE. left_axis vector axis left pyramid. missing, automatically given using pretty(). right_axis vector axis right pyramid. missing, left_axis used. axis_fm format code formatC plotting axis. missing, \"g\" used. axis_bm big.mark formatC plotting axis. missing, none. axis_bi big.interval number formatC plotting axis. Default 3. cgap width center gap (ratio panel) draw age-class. Default 0.3. cstep interval write labels age classes. Default 1. csize font size factor write labels age classes. Default 1. labs label left, center, right pyramid. Default c(\"Males\", \"Ages\", \"Females\"). gl Logical value draw vertical dotted lines. Default TRUE. cadj vertical adjustment factor labels age classes. Default -0.03. cols color left right pyramid. Default c(\"lightblue\", \"pink\"). dens density hatching lines (/inch) left right pyramid. Default c(-1, -1), pyramid filled. main main title pyramid. grid Grids.","code":""},{"path":"/reference/draw_pyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw population pyramids. — draw_pyramid","text":"Pyramids plot.","code":""},{"path":"/reference/drop_others.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop other cancer in cancer categories. — drop_others","title":"Drop other cancer in cancer categories. — drop_others","text":"Drop cancer cancer categories.","code":""},{"path":"/reference/drop_others.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop other cancer in cancer categories. — drop_others","text":"","code":"drop_others(x)"},{"path":"/reference/drop_others.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop other cancer in cancer categories. — drop_others","text":"x data frame.","code":""},{"path":"/reference/drop_others.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop other cancer in cancer categories. — drop_others","text":"data frame.","code":""},{"path":"/reference/drop_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop the total cancer — drop_total","title":"Drop the total cancer — drop_total","text":"Drop total cancer","code":""},{"path":"/reference/drop_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop the total cancer — drop_total","text":"","code":"drop_total(x)"},{"path":"/reference/drop_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop the total cancer — drop_total","text":"x data frame.","code":""},{"path":"/reference/drop_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop the total cancer — drop_total","text":"data frame.","code":""},{"path":"/reference/estimate_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating population structure using interpolation method. — estimate_pop","title":"Estimating population structure using interpolation method. — estimate_pop","text":"Estimating population structure using interpolation method.","code":""},{"path":"/reference/estimate_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating population structure using interpolation method. — estimate_pop","text":"","code":"estimate_pop(pop1, pop2, period)"},{"path":"/reference/estimate_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating population structure using interpolation method. — estimate_pop","text":"pop1 Population population proportion age group start year. pop2 Population population proportion age group end year. period Vector contain start year end year value.","code":""},{"path":"/reference/estimate_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating population structure using interpolation method. — estimate_pop","text":"data frame contain estimated population proportion year period year one column age group one row.","code":""},{"path":"/reference/estimate_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating population structure using interpolation method. — estimate_pop","text":"","code":"pop1 <- c(59546, 294129, 472511, 552549, 821119, 996436, 805635, 1004506,           989357, 1056612, 986559, 792270, 544544, 452297, 473579, 350802,           212614, 109598, 61990) pop2 <- c(75641, 377276, 327116, 380338, 539034, 1158852, 1152329, 881443,           903484, 1011164, 1238871, 1137832, 1022787, 645441, 464777,           482941, 406144, 227977, 144526) estimate_pop(pop1, pop2, c(2000, 2010)) #>           2000        2001        2002        2003        2004        2005 #> 1  0.005395295 0.005457142 0.005518990 0.005580837 0.005642684 0.005704531 #> 2  0.026650199 0.026984677 0.027319155 0.027653632 0.027988110 0.028322588 #> 3  0.042812889 0.041132305 0.039451722 0.037771138 0.036090554 0.034409971 #> 4  0.050064906 0.048082258 0.046099609 0.044116960 0.042134311 0.040151662 #> 5  0.074399277 0.071244888 0.068090500 0.064936112 0.061781724 0.058627336 #> 6  0.090284256 0.090469175 0.090654094 0.090839013 0.091023932 0.091208851 #> 7  0.072996315 0.074858168 0.076720020 0.078581873 0.080443726 0.082305578 #> 8  0.091015456 0.088921740 0.086828025 0.084734310 0.082640594 0.080546879 #> 9  0.089642847 0.087861628 0.086080408 0.084299189 0.082517969 0.080736750 #> 10 0.095736633 0.094202135 0.092667637 0.091133138 0.089598640 0.088064141 #> 11 0.089389328 0.090299924 0.091210519 0.092121115 0.093031710 0.093942305 #> 12 0.071785350 0.073653042 0.075520734 0.077388426 0.079256118 0.081123810 #> 13 0.049339596 0.052537209 0.055734822 0.058932435 0.062130048 0.065327661 #> 14 0.040981355 0.042014738 0.043048121 0.044081504 0.045114887 0.046148270 #> 15 0.042909657 0.042313858 0.041718058 0.041122259 0.040526459 0.039930659 #> 16 0.031785180 0.032446239 0.033107299 0.033768358 0.034429417 0.035090477 #> 17 0.019264355 0.020566929 0.021869504 0.023172078 0.024474653 0.025777227 #> 18 0.009930366 0.010749839 0.011569312 0.012388786 0.013208259 0.014027732 #> 19 0.005616739 0.006204106 0.006791472 0.007378839 0.007966205 0.008553572 #>           2006        2007        2008       2009        2010 #> 1  0.005766378 0.005828225 0.005890073 0.00595192 0.006013767 #> 2  0.028657065 0.028991543 0.029326021 0.02966050 0.029994976 #> 3  0.032729387 0.031048803 0.029368220 0.02768764 0.026007052 #> 4  0.038169013 0.036186364 0.034203715 0.03222107 0.030238418 #> 5  0.055472948 0.052318559 0.049164171 0.04600978 0.042855395 #> 6  0.091393770 0.091578689 0.091763608 0.09194853 0.092133446 #> 7  0.084167431 0.086029283 0.087891136 0.08975299 0.091614841 #> 8  0.078453164 0.076359449 0.074265733 0.07217202 0.070078303 #> 9  0.078955530 0.077174311 0.075393091 0.07361187 0.071830652 #> 10 0.086529643 0.084995145 0.083460646 0.08192615 0.080391650 #> 11 0.094852901 0.095763496 0.096674091 0.09758469 0.098495282 #> 12 0.082991503 0.084859195 0.086726887 0.08859458 0.090462271 #> 13 0.068525274 0.071722887 0.074920500 0.07811811 0.081315726 #> 14 0.047181653 0.048215036 0.049248418 0.05028180 0.051315184 #> 15 0.039334860 0.038739060 0.038143261 0.03754746 0.036951661 #> 16 0.035751536 0.036412595 0.037073655 0.03773471 0.038395773 #> 17 0.027079802 0.028382376 0.029684951 0.03098753 0.032290100 #> 18 0.014847205 0.015666679 0.016486152 0.01730563 0.018125099 #> 19 0.009140938 0.009728305 0.010315672 0.01090304 0.011490405"},{"path":"/reference/event.html","id":null,"dir":"Reference","previous_headings":"","what":"event — event","title":"event — event","text":"event","code":""},{"path":"/reference/event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"event — event","text":"event variable used specify type calculation, options fbs sws, fbs cancer incidence, sws cancer mortality.","code":""},{"path":"/reference/expand_age_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand age groups population. — expand_age_pop","title":"Expand age groups population. — expand_age_pop","text":"Expand age groups population.","code":""},{"path":"/reference/expand_age_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand age groups population. — expand_age_pop","text":"","code":"expand_age_pop(x, method = \"linear\")"},{"path":"/reference/expand_age_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand age groups population. — expand_age_pop","text":"x Vector, population age group. method Method expanding, options 'linear', 'constant', 'periodic', 'natural'. Default 'linear'.","code":""},{"path":"/reference/expand_age_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand age groups population. — expand_age_pop","text":"Vector contain expanded age population.","code":""},{"path":"/reference/expand_age_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand age groups population. — expand_age_pop","text":"","code":"ages <- c(   5053, 17743, 25541, 32509, 30530, 34806, 36846, 38691, 40056,   39252, 37349, 30507, 26363, 21684, 15362, 11725, 7461, 3260, 915) expand_age_pop(ages) #>     x    y #> 1   0 5053 #> 2   1 4649 #> 3   2 4446 #> 4   3 4240 #> 5   4 4408 #> 6   5 4704 #> 7   6 4874 #> 8   7 5042 #> 9   8 5321 #> 10  9 5600 #> 11 10 6158 #> 12 11 6438 #> 13 12 6717 #> 14 13 6638 #> 15 14 6558 #> 16 15 6114 #> 17 16 6035 #> 18 17 5956 #> 19 18 6127 #> 20 19 6298 #> 21 20 6672 #> 22 21 6844 #> 23 22 7015 #> 24 23 7097 #> 25 24 7178 #> 26 25 7209 #> 27 26 7293 #> 28 27 7374 #> 29 28 7448 #> 30 29 7522 #> 31 30 7601 #> 32 31 7676 #> 33 32 7750 #> 34 33 7805 #> 35 34 7859 #> 36 35 7954 #> 37 36 8009 #> 38 37 8063 #> 39 38 8031 #> 40 39 7999 #> 41 40 7943 #> 42 41 7909 #> 43 42 7876 #> 44 43 7800 #> 45 44 7724 #> 46 45 7739 #> 47 46 7665 #> 48 47 7589 #> 49 48 7315 #> 50 49 7041 #> 51 50 6585 #> 52 51 6310 #> 53 52 6036 #> 54 53 5871 #> 55 54 5705 #> 56 55 5617 #> 57 56 5451 #> 58 57 5286 #> 59 58 5098 #> 60 59 4911 #> 61 60 4752 #> 62 61 4563 #> 63 62 4376 #> 64 63 4123 #> 65 64 3870 #> 66 65 3513 #> 67 66 3261 #> 68 67 3008 #> 69 68 2863 #> 70 69 2717 #> 71 70 2652 #> 72 71 2505 #> 73 72 2360 #> 74 73 2189 #> 75 74 2019 #> 76 75 1830 #> 77 76 1662 #> 78 77 1491 #> 79 78 1323 #> 80 79 1155 #> 81 80  921 #> 82 81  755 #> 83 82  587 #> 84 83  528 #> 85 84  469 #> 86 85  299 #> 87 86  242 #> 88 87  182 #> 89 88  123 #> 90 89   64 #> 91 90    5 #> 92 91    0 #> 93 92    0"},{"path":"/reference/expand_lifetable.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","title":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","text":"Expand five-year(abridged) life table one-year(complete) life table.","code":""},{"path":"/reference/expand_lifetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","text":"","code":"expand_lifetable(lx)"},{"path":"/reference/expand_lifetable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","text":"lx vector contains total number survivors lx age x obtained abridged life table.","code":""},{"path":"/reference/expand_lifetable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","text":"List contains two vectors fitlx fitmx.","code":""},{"path":"/reference/expand_lifetable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand five-year(abridged) life table to one-year(complete) life table. — expand_lifetable","text":"","code":"lx <- c(   100000, 99498.39, 99294.62, 99173.88, 99047.59, 98840.46,   98521.16, 98161.25, 97636.99, 96900.13, 95718.96, 93930.91,   91463.21, 87131.41, 80525.02, 70907.59, 58090.75, 41630.48,   24019.33 ) lx <- lx / 100000 expand_lifetable(lx) #> $fitlx #>   [1] 1.000000000 0.994983900 0.994304537 0.993754859 0.993309597 0.992946200 #>   [7] 0.992644701 0.992387537 0.992158374 0.991946916 0.991738800 0.991559060 #>  [13] 0.991347165 0.991096388 0.990805228 0.990475900 0.990146402 0.989778116 #>  [19] 0.989366890 0.988909653 0.988404600 0.987828760 0.987212916 0.986565920 #>  [25] 0.985896357 0.985211600 0.984552899 0.983875355 0.983167860 0.982417917 #>  [31] 0.981612500 0.980705363 0.979728767 0.978681787 0.977563049 0.976369900 #>  [37] 0.975129994 0.973793402 0.972340482 0.970750272 0.969001300 0.967057696 #>  [43] 0.964918540 0.962569391 0.959997044 0.957189600 0.954059096 0.950697339 #>  [49] 0.947116296 0.943321677 0.939309100 0.935255836 0.930870900 0.926047151 #>  [55] 0.920671732 0.914632100 0.907632896 0.899826798 0.891186182 0.881688768 #>  [61] 0.871314100 0.860165097 0.848051422 0.834905389 0.820659692 0.805250200 #>  [67] 0.788512450 0.770535568 0.751308576 0.730824120 0.709075900 0.686309280 #>  [73] 0.662182445 0.636612889 0.609534445 0.580907500 0.550378334 0.518493866 #>  [79] 0.485392675 0.451254958 0.416304800 0.380810946 0.345085560 0.309480475 #>  [85] 0.274380479 0.240193300 0.207336178 0.176219242 0.147226296 0.120694131 #>  [91] 0.096891961 0.076003005 0.058110507 0.043190385 0.031112291 0.021649946 #>  [97] 0.014500329 0.009309887 0.005704549 0.003319473 #>  #> $fitmx #>   [1] 0.0050287229 0.0006830210 0.0005529797 0.0004481607 0.0003659114 #>   [6] 0.0003036867 0.0002591035 0.0002309476 0.0002131515 0.0002098278 #>  [11] 0.0001812540 0.0002137218 0.0002529973 0.0002938187 0.0003324396 #>  [16] 0.0003327221 0.0003720199 0.0004155588 0.0004622586 0.0005108472 #>  [21] 0.0005827656 0.0006236256 0.0006555918 0.0006789103 0.0006947944 #>  [26] 0.0006688121 0.0006884115 0.0007193483 0.0007630738 0.0008201671 #>  [31] 0.0009245562 0.0009963060 0.0010692143 0.0011437613 0.0012212793 #>  [36] 0.0012707215 0.0013716207 0.0014931349 0.0016367844 0.0018032956 #>  [41] 0.0020077953 0.0022144750 0.0024375255 0.0026759527 0.0029287141 #>  [46] 0.0032758761 0.0035298582 0.0037738668 0.0040145440 0.0042627408 #>  [51] 0.0043244915 0.0046995143 0.0051954468 0.0058216052 0.0065816393 #>  [56] 0.0076819105 0.0086376992 0.0096489341 0.0107142412 0.0118365910 #>  [61] 0.0128781878 0.0141830712 0.0156228608 0.0172098923 0.0189554831 #>  [66] 0.0210048414 0.0230623792 0.0252693615 0.0276436252 0.0302102564 #>  [71] 0.0326342016 0.0357872566 0.0393793535 0.0434663010 0.0481039243 #>  [76] 0.0539856150 0.0596777239 0.0659699946 0.0729257066 0.0806148116 #>  [81] 0.0891146367 0.0985106621 0.1088973812 0.1203792500 0.1330717385 #>  [86] 0.1471024914 0.1626126119 0.1797580810 0.1987113256 0.2196629532 #>  [91] 0.2428236683 0.2684263914 0.2967286020 0.3280149273 0.3626000048 #>  [96] 0.4008316468 0.4430943379 0.4898131021 0.5414577764 0.5414577764 #>"},{"path":"/reference/has_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the data frame has rows after filtering — has_rows","title":"Check if the data frame has rows after filtering — has_rows","text":"Check data frame rows filtering","code":""},{"path":"/reference/has_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the data frame has rows after filtering — has_rows","text":"","code":"has_rows(df, ...)"},{"path":"/reference/has_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the data frame has rows after filtering — has_rows","text":"df data frame check row count applying conditions. ... Conditions filtering data frame.","code":""},{"path":"/reference/has_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the data frame has rows after filtering — has_rows","text":"Logical: TRUE data frame rows, FALSE otherwise.","code":""},{"path":"/reference/load_canreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Example Data Set — load_canreg","title":"Load Example Data Set — load_canreg","text":"function loads example data set 'canregtools' package. data set Excel file included package.","code":""},{"path":"/reference/load_canreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Example Data Set — load_canreg","text":"","code":"load_canreg()"},{"path":"/reference/load_canreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Example Data Set — load_canreg","text":"data frame tibble containing example data.","code":""},{"path":"/reference/load_canreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Example Data Set — load_canreg","text":"","code":"data <- load_canreg()"},{"path":"/reference/ls_reframe_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"List names of variables could be used cr_reframe function. — ls_reframe_vars","title":"List names of variables could be used cr_reframe function. — ls_reframe_vars","text":"List names variables used cr_reframe function.","code":""},{"path":"/reference/ls_reframe_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List names of variables could be used cr_reframe function. — ls_reframe_vars","text":"","code":"ls_reframe_vars()"},{"path":"/reference/ls_reframe_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List names of variables could be used cr_reframe function. — ls_reframe_vars","text":"tibble two columns: Vars: name variable (e.g., \"fbs\"). Description: detailed description variable.","code":""},{"path":"/reference/ls_reframe_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List names of variables could be used cr_reframe function. — ls_reframe_vars","text":"","code":"ls_reframe_vars() #> # A tibble: 6 × 2 #>   Vars      Description                                                          #>   <chr>     <chr>                                                                #> 1 areacode  China administrative division code                                   #> 2 registry  Cancer Registry codes expressed as administrative division code      #> 3 province  Province expressed as administrative division code                   #> 4 city      City expressed as administrative division code                       #> 5 area_type Area type expressed as 6 digits code 910000 for city, 920000 for ru… #> 6 region    Region in China express as digits code"},{"path":"/reference/ls_std_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"list all standard population names available — ls_std_vars","title":"list all standard population names available — ls_std_vars","text":"list standard population names available","code":""},{"path":"/reference/ls_std_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list all standard population names available — ls_std_vars","text":"","code":"ls_std_vars()"},{"path":"/reference/ls_std_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list all standard population names available — ls_std_vars","text":"Character vector contain names standard population.","code":""},{"path":"/reference/ls_std_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"list all standard population names available — ls_std_vars","text":"","code":"ls_std_vars() #> # A tibble: 5 × 2 #>   Vars    Description                            #>   <chr>   <chr>                                  #> 1 cn64    Standard population in Chinese in 1964 #> 2 cn82    Standard population in Chinese in 1982 #> 3 cn2000  Standard population in Chinese in 2000 #> 4 wld85   Segi's world standard population       #> 5 wld2000 World standard population in 2000"},{"path":"/reference/ls_summary_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"List names of variables produced by the summary function. — ls_summary_vars","title":"List names of variables produced by the summary function. — ls_summary_vars","text":"function returns predefined list variable names typically produced summary function data analysis workflows.","code":""},{"path":"/reference/ls_summary_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List names of variables produced by the summary function. — ls_summary_vars","text":"","code":"ls_summary_vars()"},{"path":"/reference/ls_summary_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List names of variables produced by the summary function. — ls_summary_vars","text":"tibble two columns: Vars: name variable (e.g., \"fbs\"). Description: detailed description variable.","code":""},{"path":"/reference/ls_summary_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List names of variables produced by the summary function. — ls_summary_vars","text":"","code":"ls_summary_vars() #> # A tibble: 11 × 2 #>    Vars             Description                                        #>    <chr>            <chr>                                              #>  1 fbs              Cancer Incidence Cases                             #>  2 inci             Cancer Incidence Rate(1 per 100000)                #>  3 sws              Cancer Mortality Cases                             #>  4 mort             Cancer Mortality Rate(1 per 100000)                #>  5 mi               Mortality to Incidence Ratio(M:I)                  #>  6 rks              Population Size Corresponding to the cancer cases  #>  7 rks_year         Years Corresponding to the Population              #>  8 inci_vars        Variables in the FB Sheets                         #>  9 miss_r_vars_inci Missed variables of necessary variable of FB sheet #> 10 mort_vars        Variables in the SW Sheets                         #> 11 miss_r_vars_mort Missed variables of necessary variable of SW sheet"},{"path":"/reference/lt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate life table from mortality rates. — lt","title":"Calculate life table from mortality rates. — lt","text":"Calculate life table mortality rates.","code":""},{"path":"/reference/lt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate life table from mortality rates. — lt","text":"","code":"lt(mx, sage = 0, sep_zero = TRUE, age_width = 5, sex = \"male\")"},{"path":"/reference/lt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate life table from mortality rates. — lt","text":"mx Death rate age x. sage Start age. sep_zero Specify whether zero age group separate. age_width Age groups width. sex Gender life table, \"male\",\"female\" \"total\".","code":""},{"path":"/reference/lt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate life table from mortality rates. — lt","text":"data frame containing following values. age Start age age group. mx Death rate age x. qx probability individual exact age x die exact age x+1. lx Number survivors exact age x. radix 1. dx number deaths exact age x x+1. Lx Number years lived age x x+1. Tx Number years lived exact age x. ex Remaining life expectancy exact age x.","code":""},{"path":"/reference/lt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate life table from mortality rates. — lt","text":"","code":"px <- c(20005, 86920, 102502, 151494, 182932, 203107, 240289, 247076, 199665,         163820, 145382, 86789, 69368, 51207, 39112, 20509, 12301, 6586, 1909) dx <- c(156, 58, 47, 49, 48, 68, 120, 162, 160, 294, 417, 522, 546, 628,         891, 831, 926, 731, 269) mx <- dx / px lt(mx, sage = 0, age_width = 5, sex = \"male\") #>    age           mx          qx        lx          dx        Lx        Tx #> 1    0 0.0077980505 0.007741661 1.0000000 0.007741661 0.9927687 75.668293 #> 2    1 0.0006672803 0.002664905 0.9922583 0.002644274 3.9627639 74.675524 #> 3    5 0.0004585276 0.002290013 0.9896141 0.002266229 4.9424048 70.712761 #> 4   10 0.0003234452 0.001615919 0.9873478 0.001595474 4.9327505 65.770356 #> 5   15 0.0002623926 0.001311103 0.9857524 0.001292423 4.9255308 60.837605 #> 6   20 0.0003347989 0.001672595 0.9844599 0.001646602 4.9181832 55.912075 #> 7   25 0.0004993986 0.002493880 0.9828133 0.002451018 4.9079391 50.993891 #> 8   30 0.0006556687 0.003272979 0.9803623 0.003208705 4.8937898 46.085952 #> 9   35 0.0008013422 0.003998700 0.9771536 0.003907345 4.8759997 41.192162 #> 10  40 0.0017946527 0.008933183 0.9732463 0.008694187 4.8444959 36.316163 #> 11  45 0.0028683056 0.014239420 0.9645521 0.013734663 4.7884238 31.471667 #> 12  50 0.0060145871 0.029627443 0.9508174 0.028170289 4.6836614 26.683243 #> 13  55 0.0078710645 0.038595846 0.9226471 0.035610347 4.5242098 21.999582 #> 14  60 0.0122639483 0.059495614 0.8870368 0.052774798 4.3032469 17.475372 #> 15  65 0.0227807323 0.107766180 0.8342620 0.089905227 3.9465469 13.172125 #> 16  70 0.0405187966 0.183959445 0.7443568 0.136931456 3.3794552  9.225578 #> 17  75 0.0752784326 0.316776136 0.6074253 0.192417840 2.5560819  5.846123 #> 18  80 0.1109930155 0.434420871 0.4150075 0.180287903 1.6243176  3.290041 #> 19  85 0.1409114720 1.000000000 0.2347196 0.234719559 1.6657236  1.665724 #>           ex #> 1  75.668293 #> 2  75.258148 #> 3  71.454886 #> 4  66.613156 #> 5  61.716926 #> 6  56.794667 #> 7  51.885632 #> 8  47.009102 #> 9  42.155258 #> 10 37.314464 #> 11 32.628271 #> 12 28.063477 #> 13 23.843982 #> 14 19.700842 #> 15 15.788955 #> 16 12.394028 #> 17  9.624431 #> 18  7.927667 #> 19  7.096654 mx <- c(0.01685, 0.00085, 0.00044, 0.00045, 0.00064, 0.00086, 0.00103,         0.00136, 0.00195, 0.00291, 0.00429, 0.00672, 0.00985, 0.01596,         0.02605, 0.04536, 0.07247, 0.12078, 0.17957, 0.25938, 0.25989) lt(mx, sage = 0, age_width = 5, sex = \"total\") #>    age      mx          qx         lx          dx         Lx          Tx #> 1    0 0.01685 0.016596965 1.00000000 0.016596965 0.98498311 72.42819568 #> 2    1 0.00085 0.003392934 0.98340303 0.003336622 3.92543737 71.44321257 #> 3    5 0.00044 0.002197583 0.98006641 0.002153777 4.89494762 67.51777520 #> 4   10 0.00045 0.002247472 0.97791264 0.002197831 4.88406860 62.62282758 #> 5   15 0.00064 0.003194888 0.97571481 0.003117300 4.87078078 57.73875898 #> 6   20 0.00086 0.004290775 0.97259751 0.004173197 4.85255453 52.86797820 #> 7   25 0.00103 0.005136773 0.96842431 0.004974576 4.82968510 48.01542367 #> 8   30 0.00136 0.006776958 0.96344973 0.006529259 4.80092552 43.18573856 #> 9   35 0.00195 0.009702699 0.95692047 0.009284712 4.76139059 38.38481305 #> 10  40 0.00291 0.014444913 0.94763576 0.013688516 4.70395752 33.62342246 #> 11  45 0.00429 0.021222390 0.93394725 0.019820593 4.62018475 28.91946493 #> 12  50 0.00672 0.033044847 0.91412665 0.030207175 4.49511533 24.29928019 #> 13  55 0.00985 0.048066366 0.88391948 0.042486797 4.31338040 19.80416486 #> 14  60 0.01596 0.076738148 0.84143268 0.064569986 4.04573844 15.49078446 #> 15  65 0.02605 0.122286117 0.77686270 0.094999522 3.64681467 11.44504601 #> 16  70 0.04536 0.203700377 0.68186317 0.138895786 3.06207640  7.79823134 #> 17  75 0.07247 0.306770800 0.54296739 0.166566540 2.29842059  4.73615493 #> 18  80 0.12078 0.463842697 0.37640085 0.174590785 1.44552728  2.43773434 #> 19  85 0.17957 0.619666304 0.20181006 0.125054896 0.69641308  0.99220707 #> 20  90 0.25938 0.786739058 0.07675517 0.060386288 0.23281012  0.29579399 #> 21  95 0.25989 1.000000000 0.01636888 0.016368879 0.06298387  0.06298387 #>           ex #> 1  72.428196 #> 2  72.648965 #> 3  68.891020 #> 4  64.037241 #> 5  59.175856 #> 6  54.357510 #> 7  49.580977 #> 8  44.824070 #> 9  40.112856 #> 10 35.481378 #> 11 30.964774 #> 12 26.581962 #> 13 22.404942 #> 14 18.410010 #> 15 14.732392 #> 16 11.436651 #> 17  8.722724 #> 18  6.476432 #> 19  4.916539 #> 20  3.853734 #> 21  3.847782"},{"path":"/reference/mp_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"mp decimal — mp_decimal","title":"mp decimal — mp_decimal","text":"mp decimal","code":""},{"path":"/reference/mp_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mp decimal — mp_decimal","text":"mp constant multiply rates (e.g. mp=1000 rates per 1000). decimal parameter specifies number decimal places round results. default 2, means rates rounded two decimal places.","code":""},{"path":"/reference/pyramid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot population pyramid — pyramid","title":"Plot population pyramid — pyramid","text":"Plot population pyramid","code":""},{"path":"/reference/pyramid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot population pyramid — pyramid","text":"","code":"pyramid(   data,   show_value = TRUE,   show_prop = TRUE,   left_axis = NULL,   right_axis = NULL,   axis_fm = \"g\",   axis_bm = \"\",   axis_bi = 3,   cgap = 0.3,   cstep = 1,   csize = 1,   labs = c(\"Males\", \"Ages\", \"Females\"),   gl = TRUE,   cadj = 0,   cols = c(\"#006400\", \"#b32134\"),   dens = c(-1, -1),   main = \"\",   ... )"},{"path":"/reference/pyramid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot population pyramid — pyramid","text":"data data.frame including left pyramid numbers 1st column right pyramid numbers 2nd column, numbers males age-class usually given left numbers females right numbers. data.frame includes 3rd column, used age-class labels, otherwise row.names(data) used age-class labels. show_value Logical value draw population numbers. Default TRUE. show_prop Logical value draw pyramid using proportion. Default TRUE. left_axis vector axis left pyramid. missing, automatically given using pretty(). right_axis vector axis right pyramid. missing, left_axis used. axis_fm format code formatC plotting axis. missing, \"g\" used. axis_bm big.mark formatC plotting axis. missing, none. axis_bi big.interval number formatC plotting axis. Default 3. cgap width center gap (ratio panel) draw age-class. Default 0.3. cstep interval write labels age classes. Default 1. csize font size factor write labels age classes. Default 1. labs label left, center, right pyramid. Default c(\"Males\", \"Ages\", \"Females\"). gl Logical value draw vertical dotted lines. Default TRUE. cadj vertical adjustment factor labels age classes. Default -0.03. cols color left right pyramid. Default c(\"lightblue\", \"pink\"). dens density hatching lines (/inch) left right pyramid. Default c(-1, -1), pyramid filled. main main title pyramid. ... options.","code":""},{"path":"/reference/pyramid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot population pyramid — pyramid","text":"population pyramid plot.","code":""},{"path":"/reference/pyramid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot population pyramid — pyramid","text":"","code":"left <- c(   5053, 17743, 25541, 32509, 30530, 34806, 36846, 38691, 40056,   39252, 37349, 30507, 26363, 21684, 15362, 11725, 7461, 3260, 915 ) right <- c(   4728, 15330, 22633, 27784, 28082, 32605, 32964, 35732, 36234,   37123, 34242, 29152, 24667, 18940, 15406, 12355, 10206, 5634,   2547 ) agegrp <- c(   \"0\", \"1-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\",   \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\",   \"70-74\", \"75-79\", \"80-84\", \"85+\" ) pop <- data.frame(left = left, right = right, row.names = agegrp) pyramid(pop, main = \"Population pyramid in China.\", csize = 0.8)"},{"path":"/reference/read_canreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","title":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","text":"Read cancer registration data format reported National Cancer Center.","code":""},{"path":"/reference/read_canreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","text":"","code":"read_canreg(x, pop_type = \"long\")"},{"path":"/reference/read_canreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","text":"x Address cancer registration data, specific excel file, folder contains series Excel files. pop_type Format population sheet, options area 'long' 'wide', default 'long'.","code":""},{"path":"/reference/read_canreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","text":"object canreg class list objects canreg class.","code":""},{"path":"/reference/read_canreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read cancer registration data in the format reported to the National Cancer Center. — read_canreg","text":"","code":"library(canregtools) file <- system.file(\"extdata\", \"411721.xls\", package = \"canregtools\") data <- read_canreg(file)"},{"path":"/reference/reframe_fbswicd.html","id":null,"dir":"Reference","previous_headings":"","what":"Reframe data of class fbswicds — reframe_fbswicd","title":"Reframe data of class fbswicds — reframe_fbswicd","text":"Reframe data class fbswicds","code":""},{"path":"/reference/reframe_fbswicd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reframe data of class fbswicds — reframe_fbswicd","text":"","code":"reframe_fbswicd(x, ...)  # S3 method for class 'canregs' reframe_fbswicd(x, ..., cancer_type = \"big\")  # S3 method for class 'fbswicds' reframe_fbswicd(x, ...)"},{"path":"/reference/reframe_fbswicd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reframe data of class fbswicds — reframe_fbswicd","text":"x Object class fbswicds. ... Stratification variables used reframe. cancer_type Method classify cancer sites.","code":""},{"path":"/reference/reframe_fbswicd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reframe data of class fbswicds — reframe_fbswicd","text":"Merged fbswicd.","code":""},{"path":"/reference/show_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — show_registry","title":"Title — show_registry","text":"Title","code":""},{"path":"/reference/show_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — show_registry","text":"","code":"show_registry(registry_type = \"all\", source = \"system\")"},{"path":"/reference/show_registry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — show_registry","text":"registry_type registry type source character source areacode","code":""},{"path":"/reference/show_registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — show_registry","text":"Character vector","code":""},{"path":"/reference/strat_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"strat_vars — strat_vars","title":"strat_vars — strat_vars","text":"strat_vars","code":""},{"path":"/reference/strat_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"strat_vars — strat_vars","text":"... One variables used stratification. example, can stratify sex, year, cancer, just year. sex passed parameter, output result combined gender.","code":""},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary object of class 'canreg' — summary.canreg","title":"Summary object of class 'canreg' — summary.canreg","text":"Summary object class 'canreg'","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary object of class 'canreg' — summary.canreg","text":"","code":"# S3 method for class 'canreg' summary(object, ...)  # S3 method for class 'canregs' summary(object, collapse = TRUE, ...)"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary object of class 'canreg' — summary.canreg","text":"object Object data class 'canreg', 'canregs' ... filter expressions collapse Collapse data .","code":""},{"path":"/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary object of class 'canreg' — summary.canreg","text":"data frame contains summary statistics canreg data.","code":""},{"path":"/reference/tidy_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy age description. — tidy_age","title":"Tidy age description. — tidy_age","text":"Tidy age description.","code":""},{"path":"/reference/tidy_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy age description. — tidy_age","text":"","code":"tidy_age(x, unit = \"year\")"},{"path":"/reference/tidy_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy age description. — tidy_age","text":"x Vector contains age description Chinese. unit Character, unit values return, options \"year\", \"month\", \"day\", default \"year\".","code":""},{"path":"/reference/tidy_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy age description. — tidy_age","text":"Numeric vector contains age.","code":""},{"path":"/reference/tidy_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy age description. — tidy_age","text":"","code":"agedes <- c(\"50\\u5c8110\\u67083\\u6708\", \"19\\u5c815\\u6708\",             \"1\\u5c8130\\u6708\", \"3\\u670820\\u6708\",\"30\\u6708\") tidy_age(agedes, unit = \"year\") #> [1] 50 19  3  1  2 tidy_age(agedes, unit = \"month\") #> [1] 602 232  41  20  30 tidy_age(agedes, unit = \"day\") #> [1] 18354  7092  1278   609   913"},{"path":"/reference/tidy_areacode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attributes affiliated with the areacode — tidy_areacode","title":"Get attributes affiliated with the areacode — tidy_areacode","text":"Get attributes affiliated areacode","code":""},{"path":"/reference/tidy_areacode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attributes affiliated with the areacode — tidy_areacode","text":"","code":"tidy_areacode(x, lang = \"cn\", as_factor = FALSE)"},{"path":"/reference/tidy_areacode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attributes affiliated with the areacode — tidy_areacode","text":"x Character vector six digits areacode. lang Character string indicate language. as_factor Logical value, indicate output factor .","code":""},{"path":"/reference/tidy_areacode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attributes affiliated with the areacode — tidy_areacode","text":"List atttributes areacode.","code":""},{"path":"/reference/tidy_cancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy cancer code — tidy_cancer","title":"Tidy cancer code — tidy_cancer","text":"Tidy cancer code","code":""},{"path":"/reference/tidy_cancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy cancer code — tidy_cancer","text":"","code":"tidy_cancer(x, label_type = \"full\", lang = \"zh\", as_factor = TRUE)"},{"path":"/reference/tidy_cancer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy cancer code — tidy_cancer","text":"x Cancer codes output classify_icd10. label_type Type labels used, options 'full' 'abbr'. lang Language used labels, options area 'en' 'cn'. as_factor Logical value, output factor .","code":""},{"path":"/reference/tidy_cancer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy cancer code — tidy_cancer","text":"Factors cancer code label.","code":""},{"path":"/reference/tidy_occu.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy occupation codes or description. — tidy_occu","title":"Tidy occupation codes or description. — tidy_occu","text":"Tidy occupation codes description.","code":""},{"path":"/reference/tidy_occu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy occupation codes or description. — tidy_occu","text":"","code":"tidy_occu(x, lang = \"cn\")"},{"path":"/reference/tidy_occu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy occupation codes or description. — tidy_occu","text":"x character vector contains description occupation lang Language, Options \"eng\" English, \"cn\" chinese. Default cn.","code":""},{"path":"/reference/tidy_occu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy occupation codes or description. — tidy_occu","text":"factor vector contains formatted occupation.","code":""},{"path":"/reference/tidy_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy gender variable — tidy_sex","title":"Tidy gender variable — tidy_sex","text":"Tidy gender variable","code":""},{"path":"/reference/tidy_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy gender variable — tidy_sex","text":"","code":"tidy_sex(x, lang = \"zh\", as_factor = FALSE)"},{"path":"/reference/tidy_sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy gender variable — tidy_sex","text":"x Vector contains gender information. lang Character, specify output language, options 'cn', 'en', default 'cn'. as_factor Return factor value.","code":""},{"path":"/reference/tidy_sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy gender variable — tidy_sex","text":"factor vector contains gender information.","code":""},{"path":"/reference/tidy_sex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy gender variable — tidy_sex","text":"","code":"gender <- c(\"male\", \"men\", \"women\", \"female\", \"women\", \"man\", \"1\", \"2\") tidy_sex(gender) #> [1] 1 1 2 2 2 1 1 2"},{"path":"/reference/truncrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate truncated age standardized rate. — truncrate","title":"Calculate truncated age standardized rate. — truncrate","text":"Calculate truncated age standardized rate.","code":""},{"path":"/reference/truncrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate truncated age standardized rate. — truncrate","text":"","code":"truncrate(   cases,   pop,   stdpop = spop,   trunc_age = c(35, 64),   agewidth = 5,   sep_zero = TRUE,   mp = 100,   decimal = 2 )"},{"path":"/reference/truncrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate truncated age standardized rate. — truncrate","text":"cases Number cases. pop Number population risk. stdpop standard population. trunc_age truncated age range. agewidth Age groups width, default 5. sep_zero Logical value, 0 age group separate group. mp multiplier used scale calculated rates. Default 100. decimal Decimals calculated rates, default 2.","code":""},{"path":"/reference/truncrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate truncated age standardized rate. — truncrate","text":"Truncated age standardized rate.","code":""},{"path":"/reference/truncrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate truncated age standardized rate. — truncrate","text":"","code":"px <- c(20005, 86920, 102502, 151494, 182932, 203107, 240289, 247076, 199665,         163820, 145382, 86789, 69368, 51207, 39112, 20509, 12301, 6586, 1909) dx <- c(156, 58, 47, 49, 48, 68, 120, 162, 160, 294, 417, 522, 546, 628,         891, 831, 926, 731, 269) stdpop <- c(2.4,9.6,10,9,9,8,8,6,6,6,6,5,4,4,3,2,1,0.5,0.5) truncrate(dx, px, stdpop, trunc_age=c(35,64)) #> [1] 0.62"},{"path":"/reference/write_area_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Write area type to the user defined dict. — write_area_type","title":"Write area type to the user defined dict. — write_area_type","text":"Write area type user defined dict.","code":""},{"path":"/reference/write_area_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write area type to the user defined dict. — write_area_type","text":"","code":"write_area_type(areacode, area_type)"},{"path":"/reference/write_area_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write area type to the user defined dict. — write_area_type","text":"areacode Six-digit administrative division code. area_type Area type 'Urban' 'Rural' input Six-digit administrative division code.","code":""},{"path":"/reference/write_area_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write area type to the user defined dict. — write_area_type","text":"Null","code":""},{"path":"/reference/write_areacode.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Six-digit administrative division code to the user defined dict. — write_areacode","title":"Write Six-digit administrative division code to the user defined dict. — write_areacode","text":"Write Six-digit administrative division code user defined dict.","code":""},{"path":"/reference/write_areacode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Six-digit administrative division code to the user defined dict. — write_areacode","text":"","code":"write_areacode(x)"},{"path":"/reference/write_areacode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Six-digit administrative division code to the user defined dict. — write_areacode","text":"x data frame contains areacode, label_cn, label_en, label_abbr_cn label_abbr_en","code":""},{"path":"/reference/write_areacode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Six-digit administrative division code to the user defined dict. — write_areacode","text":"Null","code":""},{"path":"/reference/write_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the registry definition to the user defined dict. — write_registry","title":"Write the registry definition to the user defined dict. — write_registry","text":"Write registry definition user defined dict.","code":""},{"path":"/reference/write_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the registry definition to the user defined dict. — write_registry","text":"","code":"write_registry(areacode, registry)"},{"path":"/reference/write_registry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the registry definition to the user defined dict. — write_registry","text":"areacode Six-digit administrative division code. registry name registry corresponding six-digit administrative division code.","code":""},{"path":"/reference/write_registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the registry definition to the user defined dict. — write_registry","text":"Null","code":""},{"path":[]},{"path":"/news/index.html","id":"canregtools-027","dir":"Changelog","previous_headings":"","what":"canregtools 0.2.7","title":"canregtools 0.2.7","text":"add new function read_map() modify function create_map()","code":""}]
